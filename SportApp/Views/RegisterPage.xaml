<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="SportApp.Views.RegisterPage"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:vm="clr-namespace:SportApp.Viewmodels"
             xmlns:helpers="clr-namespace:SportApp.Helpers.Converters"
             x:DataType="vm:RegisterPageViewmodel"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Background="#0c0d21"
             x:Name="registerPg">
    <ContentPage.Resources>
        <helpers:AllTrueMultiConverter x:Key="AllTrueMultiConverter"></helpers:AllTrueMultiConverter>
        <toolkit:IsStringNotNullOrEmptyConverter x:Key="IsStringNotNullOrEmptyConverter" />
    </ContentPage.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="2.5*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
          HorizontalOptions="Center"
          VerticalOptions="Center">
            <Image Source="sport.png"
               WidthRequest="250"/>
        </Grid>
        <Grid Grid.Row="2">
            <Border Stroke="#161833"
                    StrokeThickness="2"
                    Background="#161833">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="20, 20, 0, 0"/>
                </Border.StrokeShape>
                <Border.Shadow>
                    <Shadow Brush="Black"
                            Radius="20"
                            Opacity="0.8" />
                </Border.Shadow>
                <VerticalStackLayout>
                    <Label Text="Регистрация"
                           HorizontalOptions="Center"
                           FontSize="30"
                           FontFamily="Montserrat-Bold"
                           TextColor="White"
                           Margin="50"/>
                    <VerticalStackLayout Spacing="20"
                                     Padding="20, 0, 20, 0">
                        <Border Padding="15, 5, 15, 5">
                            <Border.Triggers>
                                <DataTrigger TargetType="Border" Binding="{Binding Source={x:Reference emailValidation}, Path=IsValid}" Value="True">
                                    <Setter Property="Stroke" Value="#43446f"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Border" Binding="{Binding Source={x:Reference emailValidation}, Path=IsValid}" Value="False">
                                    <Setter Property="Stroke" Value="Red"/>
                                </DataTrigger>
                            </Border.Triggers>
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="20"/>
                            </Border.StrokeShape>
                            <HorizontalStackLayout Spacing="5">
                                <Image Source="email.png"
                                       HeightRequest="35"
                                       HorizontalOptions="End">
                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="#484978"/>
                                    </Image.Behaviors>
                                </Image>
                                <Entry TextColor="White"
                                       Placeholder="Введите ваш email"
                                       x:Name="emailEntry"
                                       Text="{Binding Email}">
                                    <Entry.Behaviors>
                                        <toolkit:EmailValidationBehavior 
                                                x:Name="emailValidation"
                                                Flags="ValidateOnValueChanged"
                                                MinimumLength="3"
                                                MaximumLength="50" />
                                    </Entry.Behaviors>
                                </Entry>
                            </HorizontalStackLayout>
                        </Border>
                        <Border Stroke="#43446f"
                                Padding="15, 5, 15, 5">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="20"/>
                            </Border.StrokeShape>
                            <HorizontalStackLayout Spacing="5">
                                <Image Source="password.png"
                                       HeightRequest="35"
                                       HorizontalOptions="End">
                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="#484978"/>
                                    </Image.Behaviors>
                                </Image>
                                <Entry TextColor="White"
                                       IsPassword="True"
                                       x:Name="passwordEntry"
                                       Text="{Binding Password}"
                                       Placeholder="Введите пароль">
                                </Entry>
                            </HorizontalStackLayout>
                        </Border>
                        <Border Padding="15, 5, 15, 5">
                            <Border.Triggers>
                                <DataTrigger TargetType="Border" Binding="{Binding Source={x:Reference repeatPasswordValidation}, Path=IsValid}" Value="True">
                                    <Setter Property="Stroke" Value="#43446f"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Border" Binding="{Binding Source={x:Reference repeatPasswordValidation}, Path=IsValid}" Value="False">
                                    <Setter Property="Stroke" Value="Red"/>
                                </DataTrigger>
                            </Border.Triggers>
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="20"/>
                            </Border.StrokeShape>
                            <HorizontalStackLayout Spacing="5">
                                <Image Source="password.png"
                                       HeightRequest="35"
                                       HorizontalOptions="End">
                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="#484978"/>
                                    </Image.Behaviors>
                                </Image>
                                <Entry TextColor="White" 
                                       IsPassword="True"
                                       x:Name="repeatPasswordEntry"
                                       Placeholder="Повторите пароль">
                                    <Entry.Behaviors>
                                        <toolkit:RequiredStringValidationBehavior
                                            x:Name="repeatPasswordValidation"
                                            Flags="ValidateOnValueChanged"
                                            RequiredString="{Binding Source={x:Reference passwordEntry}, Path=Text}" />
                                    </Entry.Behaviors>
                                </Entry>
                            </HorizontalStackLayout>
                        </Border>
                    </VerticalStackLayout>
                    <Label Margin="30, 20, 30, 25" 
                           Text="* Нажимая кнопку зарегистрироваться вы даете свое согласие на сбор и обработку данных"
                           FontFamily="MontserratRegular"
                           FontSize="10"
                           Opacity="0.6"/>
                    <Button Text="Зарегистрироваться"
                            Margin="20, 0, 20, 0"
                            Style="{StaticResource PrimaryButton}"
                            Command="{Binding RegisterCommand}"
                            CommandParameter="{Binding Source={x:Reference registerPg}}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                <Binding Path="IsValid" Source="{x:Reference emailValidation}"/>
                                <Binding Path="IsValid" Source="{x:Reference repeatPasswordValidation}"/>
                                <Binding Path="Text" Converter="{StaticResource IsStringNotNullOrEmptyConverter}" Source="{x:Reference emailEntry}"/>
                                <Binding Path="Text" Converter="{StaticResource IsStringNotNullOrEmptyConverter}" Source="{x:Reference passwordEntry}"/>
                                <Binding Path="Text" Converter="{StaticResource IsStringNotNullOrEmptyConverter}" Source="{x:Reference repeatPasswordEntry}"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                        <Label Text="{Binding ErrorMessage}"
                           TextColor="Red"
                           HorizontalOptions="Center"
                           VerticalOptions="Center"
                           FontSize="12"
                           FontFamily="MontserratRegular"
                           Margin="20, 20, 20, 0">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding ErrorMessage}" Value="">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Label" Binding="{Binding ErrorMessage}" Value="{x:Null}">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </VerticalStackLayout>
            </Border>
        </Grid>
    </Grid>
</ContentPage>